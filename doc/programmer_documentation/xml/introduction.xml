<chapter>
  <title>Introduction</title>
  <para>
    OpenCMISS is a project for the re-engineering of the CMISS computational engine.
  </para>
  <sect1>
    <title>CMISS</title>
    <para>
      CMISS is an interactive computer program for Continuum Mechanics, Image analysis, Signal processing 
      and System Identification.
      It provides a mathematical modelling environment that allows the application of finite element analysis, 
      boundary element and collocation techniques to a variety of complex bioengineering problems. 
    </para>
    <para>
     CMISS consists of two main components, cmgui and cm. 
     cmgui is a graphical front end with advanced 3D display and modelling capabilities. 
     It is the open source project written in C/C++.   
     cm is a computational backend that may be run remotely on powerful workstations or supercomputers. 
     cm is developed under Fortran 77 and has some licensing limitations.
    </para>
  </sect1>
  <sect1>
    <title>Shared Memeory Computing vs Distributed Memeory Computing</title>
    <para>
      cm uses OpenMP for shared memeory computing. 
      A shared memory system is relatively easy to program since all processors share a single view of data 
      and the communication between processors can be as fast as memory accesses to a same location. 
      However, CPU-to-memeory connection will eventually become a bottleneck. 
    </para>
     <para>
      The distributed memory systems increase the CPU and memeory scalibility over shared memeory system, 
      but it is much harder to program. The MPI standard is used for message passing.  
    </para>
  </sect1>
  <sect1>
    <title>Objectives of OpenCMISS</title>
    <para>
      OpenCMISS is re-engineering of CMISS cm component. 
      It is intended to give a library based approach to enable use in multiple applications.
      It is developed under Fortan 95 and Modular, easily extendable and programmable.
      It would be integrated with MPI to provide modular, easily extendable and programmable code which is applicatable 
      for either MPI based distributed system, OpenMP based shared memeory system and/or serial code. 
      It will be open sourced. 
    </para>
  </sect1>
</chapter>
