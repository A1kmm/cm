cmake_minimum_required (VERSION 2.8)

project (OpenCMISS Fortran C) 

#################Define OPENCMISS_ROOT & OPENCMISSEXTRAS_ROOT##################

# Set OPENCMISS_ROOT
IF(DEFINED ENV{OPENCMISS_ROOT})
  SET(OPENCMISS_ROOT $ENV{OPENCMISS_ROOT})
ELSE(DEFINED ENV{OPENCMISS_ROOT})
  SET(OPENCMISS_ROOT ..)
ENDIF(DEFINED ENV{OPENCMISS_ROOT})
SET(GLOBAL_CM_ROOT ${OPENCMISS_ROOT}/cm)
SET(GLOBAL_CELLML_ROOT ${OPENCMISS_ROOT}/cellml)

# Need some way of getting OPENCMISSEXTRAS_ROOT defined.
IF(DEFINED ENV{OPENCMISSEXTRAS_ROOT})
  set (OPENCMISSEXTRAS_ROOT $ENV{OPENCMISSEXTRAS_ROOT}) 
ELSE(DEFINED ENV{OPENCMISSEXTRAS_ROOT})
  set (OPENCMISSEXTRAS_ROOT ${OPENCMISS_ROOT}/../opencmissextras) 
ENDIF(DEFINED ENV{OPENCMISSEXTRAS_ROOT})
set (EXTERNAL_CM_ROOT ${OPENCMISSEXTRAS_ROOT}/cm/external)
SET(GLOBAL_FIELDML_ROOT ${OPENCMISSEXTRAS_ROOT}/fieldml)

SET(CMAKE_MODULE_PATH "${GLOBAL_CM_ROOT}/cmake_modules")
INCLUDE( ${CMAKE_MODULE_PATH}/GeneralConfiguration.cmake )
INCLUDE( ${CMAKE_MODULE_PATH}/MacroDefinitions.cmake )
INCLUDE( ${CMAKE_MODULE_PATH}/CompileFlags.cmake )
#INCLUDE( ${CMAKE_MODULE_PATH}/FindPETSc.cmake )

list(APPEND CMAKE_SYSTEM_PREFIX_PATH ${EXTERNAL_CM_ROOT}/${LIB_ARCH_DIR}${DEBUG_SUFFIX}${PROF_SUFFIX}/${MPI}/${COMPILER})
# MPI
FIND_PACKAGE(MPI REQUIRED)
INCLUDE_DIRECTORIES(${MPI_INCLUDE_PATH})
#PETSC
FIND_PACKAGE(PETSC REQUIRED)
INCLUDE_DIRECTORIES(${PETSC_INCLUDES})
#TAO
FIND_PACKAGE(TAO)
INCLUDE_DIRECTORIES(${TAO_INCLUDES})
#SUNDIALS
FIND_PACKAGE(SUNDIALS)
INCLUDE_DIRECTORIES(${SUNDIALS_INCLUDES})
#HYPRE
FIND_PACKAGE(HYPRE)
INCLUDE_DIRECTORIES(${HYPRE_INCLUDES})
#MUMPS
FIND_PACKAGE(MUMPS)
INCLUDE_DIRECTORIES(${MUMPS_INCLUDES})
#SCALAPACK
FIND_PACKAGE(SCALAPACK)
INCLUDE_DIRECTORIES(${SCALAPACK_INCLUDES})
#BLACS
FIND_PACKAGE(BLACS)
INCLUDE_DIRECTORIES(${BLACS_INCLUDES})

IF(USECELLML)
  INCLUDE_DIRECTORIES(${GLOBAL_CELLMLML_ROOT}/${LIB_ARCH_DIR}${MT_SUFFIX}${DEBUG_SUFFIX}${PROF_SUFFIX}/${COMPILER}/include)
ENDIF(USECELLML)

IF(USEFIELDML)
  INCLUDE_DIRECTORIES(${GLOBAL_FIELDML_ROOT}/${LIB_ARCH_DIR}${MT_SUFFIX}${DEBUG_SUFFIX}${PROF_SUFFIX}/include)
  INCLUDE_DIRECTORIES(${GLOBAL_FIELDML_ROOT}/${LIB_ARCH_DIR}${MT_SUFFIX}${DEBUG_SUFFIX}${PROF_SUFFIX}/${COMPILER}/include)
ENDIF(USEFIELDML)


#TODO
SET(CMAKE_Fortran_FLAGS "-ffree-form")
SET(CMAKE_Fortran_FLAGS "${CMAKE_Fortran_FLAGS} -pipe")
SET(CMAKE_Fortran_FLAGS "${CMAKE_Fortran_FLAGS} -fno-second-underscore")
SET(CMAKE_Fortran_FLAGS "${CMAKE_Fortran_FLAGS} -Wall")
SET(CMAKE_Fortran_FLAGS "${CMAKE_Fortran_FLAGS} -x f95-cpp-input")
SET(CMAKE_Fortran_FLAGS "${CMAKE_Fortran_FLAGS} -ffree-line-length-132")
SET(CMAKE_Fortran_FLAGS "${CMAKE_Fortran_FLAGS} -fmax-identifier-length=63")
SET(CMAKE_Fortran_FLAGS "${CMAKE_Fortran_FLAGS} -m64 -march=nocona")
SET(CMAKE_Fortran_FLAGS "${CMAKE_Fortran_FLAGS} -g")
SET(CMAKE_Fortran_FLAGS "${CMAKE_Fortran_FLAGS} -fPIC")
SET(CMAKE_Fortran_FLAGS "${CMAKE_Fortran_FLAGS} -O0")
SET(CMAKE_Fortran_FLAGS "${CMAKE_Fortran_FLAGS} -fbounds-check")

SET(LIBRARY_TARGET_NAME OpenCMISS-debug)
SET(LIBRARY_BUILD_TYPE STATIC)
SET(LIBRARY_INSTALL_TYPE ARCHIVE)

SET (SOURCE_DIR ${GLOBAL_CM_ROOT}/src)

FILE(GLOB OPENCMISS_SRCS "${SOURCE_DIR}" "${SOURCE_DIR}/*.*")

INCLUDE( ${CMAKE_MODULE_PATH}/Entries.cmake )

FOREACH(infileName ${EXCLUDED_ROUTINES})
    LIST(REMOVE_ITEM OPENCMISS_SRCS ${infileName})
ENDFOREACH(infileName)

ADD_LIBRARY(${LIBRARY_TARGET_NAME} ${LIBRARY_BUILD_TYPE} ${OPENCMISS_SRCS} ${PUBLIC_HDRS} ${PRIVATE_HDRS})

SET(CMAKE_INSTALL_PREFIX ${GLOBAL_CM_ROOT})

SET(OPENCMISS_INCLUDES)

INSTALL(TARGETS ${LIBRARY_TARGET_NAME} ${LIBRARY_INSTALL_TYPE} DESTINATION lib/x86_64-linux/mpich2/gnu)
INSTALL(FILES ${CMAKE_BINARY_DIR}/opencmiss.mod DESTINATION include/x86_64-linux/mpich2/gnu)

FILE(GLOB OPENCMISS_MODS RELATIVE "${CMAKE_BINARY_DIR}" "${CMAKE_BINARY_DIR}/*.mod")
INSTALL(FILES ${OPENCMISS_MODS} DESTINATION object/x86_64-linux/mpich2/gnu)


