<?xml version="1.0" encoding="UTF-8"?><!DOCTYPE html PUBLIC "-//W3C//DTD XHTML 1.0 Transitional//EN" "http://www.w3.org/TR/xhtml1/DTD/xhtml1-transitional.dtd">
<html xmlns="http://www.w3.org/1999/xhtml"><head><title>Chapter 5. Examples</title><meta content="DocBook XSL Stylesheets V1.68.1" name="generator" /><link rel="start" href="index.xhtml" title="OpenCMISS Programmer Documentation" /><link rel="up" href="index.xhtml" title="OpenCMISS Programmer Documentation" /><link rel="prev" href="ch04.xhtml" title="Chapter 4. Object Interface" /><link rel="next" href="ch06.xhtml" title="Chapter 6. Library Commands" /></head><body><div class="navheader"><table summary="Navigation header" width="100%"><tr><th align="center" colspan="3">Chapter 5. Examples</th></tr><tr><td align="left" width="20%"><a accesskey="p" href="ch04.xhtml">Prev</a> </td><th align="center" width="60%"> </th><td align="right" width="20%"> <a accesskey="n" href="ch06.xhtml">Next</a></td></tr></table><hr /></div><div class="chapter" lang="en"><div class="titlepage"><div><div><h2 class="title"><a id="N105C9" />Chapter 5. Examples</h2></div></div></div><div class="toc"><p><b>Table of Contents</b></p><dl><dt><span class="section"><a href="ch05.xhtml#N105CC">1. Laplace equation</a></span></dt></dl></div><div class="section" lang="en"><div class="titlepage"><div><p class="returntotop"><a href="ch05.xhtml">Return to top</a></p><div><h2 class="title" style="clear: both"><a id="N105CC" />1. Laplace equation</h2></div></div></div><pre class="programlisting">!Initialise CMISS.
<span class="strong"><strong>CALL</strong></span> <span class="strong"><strong>CMISS_INITIALISE</strong></span>(<span class="strong"><strong>ERR</strong></span>,ERROR,<span class="emphasis"><em>*999)</em></span>

!Start the creation a coordinate <span class="strong"><strong>system </strong></span>(default 3D RC)
<span class="strong"><strong>CALL</strong></span> <span class="strong"><strong>COORDINATE_SYSTEM_CREATE_START</strong></span>(1,COORDINATE_SYSTEM,<span class="strong"><strong>ERR</strong></span>,ERROR,<span class="emphasis"><em>*999)</em></span>
!Set the coordinate system <span class="strong"><strong>to</strong></span> be 2D
<span class="strong"><strong>CALL</strong></span> <span class="strong"><strong>COORDINATE_SYSTEM_DIMENSION_SET</strong></span>(COORDINATE_SYSTEM,2,<span class="strong"><strong>ERR</strong></span>,ERROR,<span class="emphasis"><em>*999)</em></span>
!Finish the creation a coordinate system
<span class="strong"><strong>CALL</strong></span> <span class="strong"><strong>COORDINATE_SYSTEM_CREATE_FINISH</strong></span>(COORDINATE_SYSTEM,<span class="strong"><strong>ERR</strong></span>,ERROR,<span class="emphasis"><em>*999)</em></span>

!Start the creation of a region with a coordinate system.
<span class="strong"><strong>CALL</strong></span> <span class="strong"><strong>REGION_CREATE_START</strong></span>(1,COORDINATE_SYSTEM,REGION,<span class="strong"><strong>ERR</strong></span>,ERROR,<span class="emphasis"><em>*999)</em></span>
!Finish the creation of a region
<span class="strong"><strong>CALL</strong></span> <span class="strong"><strong>REGION_CREATE_FINISH</strong></span>(REGION,<span class="strong"><strong>ERR</strong></span>,ERROR,<span class="emphasis"><em>*999)</em></span>

!Start the creation of a <span class="strong"><strong>basis </strong></span>(default tri-linear Lagrange)
<span class="strong"><strong>CALL</strong></span> <span class="strong"><strong>BASIS_CREATE_START</strong></span>(1,BASIS,<span class="strong"><strong>ERR</strong></span>,ERROR,<span class="emphasis"><em>*999)</em></span>
!Set the <span class="strong"><strong>number</strong></span> of Xi directions <span class="strong"><strong>to</strong></span> 2 (bi-linear Lagrange)
<span class="strong"><strong>CALL</strong></span> <span class="strong"><strong>BASIS_NUMBER_XI_SET</strong></span>(BASIS,2,<span class="strong"><strong>ERR</strong></span>,ERROR,<span class="emphasis"><em>*999)</em></span>
!Finish the creation of a basis
<span class="strong"><strong>CALL</strong></span> <span class="strong"><strong>BASIS_CREATE_FINISH</strong></span>(BASIS,<span class="strong"><strong>ERR</strong></span>,ERROR,<span class="emphasis"><em>*999)</em></span>

  
  
!Start the creation of a generated mesh in the region
<span class="strong"><strong>CALL</strong></span> <span class="strong"><strong>GENERATED_MESH_CREATE_START</strong></span>(1,REGION,GENERATED_MESH,<span class="strong"><strong>ERR</strong></span>,ERROR,<span class="emphasis"><em>*999)</em></span>
!Set up a regular 100x100 mesh
<span class="strong"><strong>CALL</strong></span> <span class="strong"><strong>GENERATED_MESH_TYPE_SET</strong></span>(GENERATED_MESH,GENERATED_MESH_REGULAR_TYPE, &amp;
    &amp; <span class="strong"><strong>ERR</strong></span>,ERROR,<span class="emphasis"><em>*999)</em></span>
<span class="strong"><strong>CALL</strong></span> <span class="strong"><strong>GENERATED_MESH_BASIS_SET</strong></span>(GENERATED_MESH,BASIS,<span class="strong"><strong>ERR</strong></span>,ERROR,<span class="emphasis"><em>*999)</em></span>
<span class="strong"><strong>CALL</strong></span> <span class="strong"><strong>GENERATED_MESH_EXTENT_SET</strong></span>(GENERATED_MESH,(/2.0_DP,1.0_DP/),<span class="strong"><strong>ERR</strong></span>,ERROR,<span class="emphasis"><em>*999)</em></span>
<span class="strong"><strong>CALL</strong></span> <span class="strong"><strong>GENERATED_MESH_NUMBER_OF_ELEMENTS_SET</strong></span>(GENERATED_MESH,(/100,100/), &amp;
    &amp; <span class="strong"><strong>ERR</strong></span>,ERROR,<span class="emphasis"><em>*999)</em></span>
!Finish the creation of a generated mesh in the region
<span class="strong"><strong>CALL</strong></span> <span class="strong"><strong>GENERATED_MESH_CREATE_FINISH</strong></span>(GENERATED_MESH,MESH,<span class="strong"><strong>ERR</strong></span>,ERROR,<span class="emphasis"><em>*999)</em></span>

!Start the creation a decomposition on a mesh
<span class="strong"><strong>CALL</strong></span> <span class="strong"><strong>DECOMPOSITION_CREATE_START</strong></span>(1,MESH,DECOMPOSITION,<span class="strong"><strong>ERR</strong></span>,ERROR,<span class="emphasis"><em>*999)</em></span>
!Set the decomposition so that the domains are calculated
<span class="strong"><strong>CALL</strong></span> <span class="strong"><strong>DECOMPOSITION_TYPE_SET</strong></span>(DECOMPOSITION,DECOMPOSITION_CALCULATED_TYPE, &amp;
    &amp; <span class="strong"><strong>ERR</strong></span>,ERROR,<span class="emphasis"><em>*999)</em></span>
<span class="strong"><strong>CALL</strong></span> <span class="strong"><strong>DECOMPOSITION_NUMBER_OF_DOMAINS_SET</strong></span>(DECOMPOSITION,5,<span class="strong"><strong>ERR</strong></span>,ERROR,<span class="emphasis"><em>*999)</em></span>
!Finish the creation of decomposition
<span class="strong"><strong>CALL</strong></span> <span class="strong"><strong>DECOMPOSITION_CREATE_FINISH</strong></span>(DECOMPOSITION,<span class="strong"><strong>ERR</strong></span>,ERROR,<span class="emphasis"><em>*999)</em></span>

  

!Start the creation of a field on a <span class="strong"><strong>region </strong></span>(default geometric)
<span class="strong"><strong>CALL</strong></span> <span class="strong"><strong>FIELD_CREATE_START</strong></span>(1,REGION,GEOMETRIC_FIELD,<span class="strong"><strong>ERR</strong></span>,ERROR,<span class="emphasis"><em>*999)</em></span>
!Set the decomposition the field will use
<span class="strong"><strong>CALL</strong></span> <span class="strong"><strong>FIELD_MESH_DECOMPOSITION_SET</strong></span>(GEOMETRIC_FIELD,DECOMPOSITION,<span class="strong"><strong>ERR</strong></span>,ERROR,<span class="emphasis"><em>*999)</em></span>
!Set mesh components each of the field variable components will use. NB. These
!are shown for example as each field variable component will default <span class="strong"><strong>to</strong></span> the
!first mesh component.
<span class="strong"><strong>CALL</strong></span> <span class="strong"><strong>FIELD_COMPONENT_MESH_COMPONENT_SET</strong></span>(GEOMETRIC_FIELD, &amp;
    &amp; FIELD_STANDARD_VARIABLE_TYPE,1,1,<span class="strong"><strong>ERR</strong></span>,ERROR,<span class="emphasis"><em>*999)</em></span>
<span class="strong"><strong>CALL</strong></span> <span class="strong"><strong>FIELD_COMPONENT_MESH_COMPONENT_SET</strong></span>(GEOMETRIC_FIELD, &amp;
    &amp; FIELD_STANDARD_VARIABLE_TYPE,2,1,<span class="strong"><strong>ERR</strong></span>,ERROR,<span class="emphasis"><em>*999)</em></span>
!Finish the creation of a field
<span class="strong"><strong>CALL</strong></span> <span class="strong"><strong>FIELD_CREATE_FINISH</strong></span>(GEOMETRIC_FIELD,<span class="strong"><strong>ERR</strong></span>,ERROR,<span class="emphasis"><em>*999)</em></span>

!Set a field value in a <span class="strong"><strong>parameter</strong></span> set
<span class="strong"><strong>CALL</strong></span> <span class="strong"><strong>FIELD_PARAMETER_SET_UPDATE_NODE</strong></span>(GEOMETRIC_FIELD, &amp;
    &amp; FIELD_VALUES_SET_TYPE,1,1,1,FIELD_STANDARD_VARIABLE_TYPE, &amp;
    &amp; 1.0_DP,<span class="strong"><strong>ERR</strong></span>,ERROR,<span class="emphasis"><em>*999)</em></span>
!Start the update of field values in a <span class="strong"><strong>parameter</strong></span> set
<span class="strong"><strong>CALL</strong></span> <span class="strong"><strong>FIELD_PARAMETER_SET_UPDATE_START</strong></span>(GEOMETRIC_FIELD, &amp;
    &amp; FIELD_VALUES_SET_TYPE,<span class="strong"><strong>ERR</strong></span>,ERROR,<span class="emphasis"><em>*999)</em></span>
!!<span class="strong"><strong>DO</strong></span> SOME CALCULATIONS
!Finish the update of field values in a <span class="strong"><strong>parameter</strong></span> set
<span class="strong"><strong>CALL</strong></span> <span class="strong"><strong>FIELD_PARAMETER_SET_UPDATE_FINISH</strong></span>(GEOMETRIC_FIELD, &amp;
    &amp; FIELD_VALUES_SET_TYPE,<span class="strong"><strong>ERR</strong></span>,ERROR,<span class="emphasis"><em>*999)</em></span>
  
    
  
!Start the creation of an equations set on a region
<span class="strong"><strong>CALL</strong></span> <span class="strong"><strong>EQUATIONS_SET_CREATE_START</strong></span>(1,REGION,GEOMETRIC_FIELD,EQUATIONS_SET, &amp;
    &amp; <span class="strong"><strong>ERR</strong></span>,ERROR,<span class="emphasis"><em>*999)</em></span>
!Set the equations set <span class="strong"><strong>to</strong></span> be standard Laplace�s equation problem
<span class="strong"><strong>CALL</strong></span> <span class="strong"><strong>EQUATIONS_SET_SPECIFICATION_SET</strong></span>(EQUATIONS_SET, &amp;
    &amp; EQUATIONS_SET_CLASSICAL_FIELD_CLASS,EQUATIONS_SET_LAPLACE_EQUATION_TYPE, &amp;
    &amp; EQUATIONS_SET_STANDARD_LAPLACE_SUBTYPE,<span class="strong"><strong>ERR</strong></span>,ERROR,<span class="emphasis"><em>*999)</em></span>
!Finish the creation of an equations set
<span class="strong"><strong>CALL</strong></span> <span class="strong"><strong>EQUATIONS_SET_CREATE_FINISH</strong></span>(EQUATIONS_SET,<span class="strong"><strong>ERR</strong></span>,ERROR,<span class="emphasis"><em>*999)</em></span>

!Start the creation of the equations set dependent field
<span class="strong"><strong>CALL</strong></span> <span class="strong"><strong>EQUATIONS_SET_DEPENDENT_CREATE_START</strong></span>(EQUATIONS_SET,<span class="strong"><strong>ERR</strong></span>,ERROR,<span class="emphasis"><em>*999)</em></span>
!Finish the create of the problems dependent field
<span class="strong"><strong>CALL</strong></span> <span class="strong"><strong>EQUATIONS_SET_DEPENDENT_CREATE_FINISH</strong></span>(EQUATIONS_SET,<span class="strong"><strong>ERR</strong></span>,ERROR,<span class="emphasis"><em>*999)</em></span>

!Start the creation of the equations set fixed conditions
<span class="strong"><strong>CALL</strong></span> <span class="strong"><strong>EQUATIONS_SET_FIXED_CONDITIONS_CREATE_START</strong></span>(EQUATIONS_SET,<span class="strong"><strong>ERR</strong></span>,ERROR,<span class="emphasis"><em>*999)</em></span>
!Set BC�s
<span class="strong"><strong>CALL</strong></span> <span class="strong"><strong>EQUATIONS_SET_FIXED_CONDITIONS_SET_DOF</strong></span>(EQUATIONS_SET,1, &amp;
    &amp; EQUATIONS_SET_FIXED_BOUNDARY_CONDITION,0.0_DP,<span class="strong"><strong>ERR</strong></span>,ERROR,<span class="emphasis"><em>*999)</em></span>
<span class="strong"><strong>CALL</strong></span> <span class="strong"><strong>EQUATIONS_SET_FIXED_CONDITIONS_SET_DOF</strong></span>(PROBLEM,10, &amp;
    &amp; EQUATIONS_SET_FIXED_BOUNDARY_CONDITION,1.0_DP,<span class="strong"><strong>ERR</strong></span>,ERROR,<span class="emphasis"><em>*999)</em></span>
!Finish the create of the equations set fixed conditions
<span class="strong"><strong>CALL</strong></span> <span class="strong"><strong>EQUATIONS_SET_FIXED_CONDITIONS_CREATE_FINISH</strong></span>(EQUATIONS_SET,<span class="strong"><strong>ERR</strong></span>,ERROR,<span class="emphasis"><em>*999)</em></span>
 
  
  
 !Start the creation of the equations for the equations set
<span class="strong"><strong>CALL</strong></span> <span class="strong"><strong>EQUATIONS_SET_EQUATIONS_CREATE_START</strong></span>(EQUATIONS_SET,<span class="strong"><strong>ERR</strong></span>,ERROR,<span class="emphasis"><em>*999)</em></span>
!Set the equations matrices sparsity <span class="strong"><strong>type</strong></span>
<span class="strong"><strong>CALL</strong></span> <span class="strong"><strong>EQUATIONS_SET_SPARSITY_TYPE_SET</strong></span>(EQUATIONS_SET,EQUATIONS_SET_SPARSE_MATRICES, &amp; 
    &amp; <span class="strong"><strong>ERR</strong></span>,ERROR,<span class="emphasis"><em>*999)</em></span>
!Set the equations output <span class="strong"><strong>type</strong></span>
<span class="strong"><strong>CALL</strong></span> <span class="strong"><strong>EQUATIONS_SET_OUTPUT_TYPE_SET</strong></span>(EQUATIONS_SET,EQUATIONS_SET_TIMING_OUTPUT, &amp;
    &amp; <span class="strong"><strong>ERR</strong></span>,ERROR,<span class="emphasis"><em>*999)</em></span>
!Finish the creation of the equations for the equations set
<span class="strong"><strong>CALL</strong></span> <span class="strong"><strong>EQUATIONS_SET_EQUATIONS_CREATE_FINISH</strong></span>(EQUATIONS_SET,<span class="strong"><strong>ERR</strong></span>,ERROR,<span class="emphasis"><em>*999)</em></span>

!Start the creation of a problem
<span class="strong"><strong>CALL</strong></span> <span class="strong"><strong>PROBLEM_CREATE_START</strong></span>(1,PROBLEM,<span class="strong"><strong>ERR</strong></span>,ERROR,<span class="emphasis"><em>*999)</em></span>
!Set the problem set <span class="strong"><strong>to</strong></span> be standard Laplace�s equation problem
<span class="strong"><strong>CALL</strong></span> <span class="strong"><strong>PROBLEM_SPECIFICATION_SET</strong></span>(PROBLEM,PROBLEM_CLASSICAL_FIELD_CLASS, &amp;
    &amp; PROBLEM_LAPLACE_EQUATION_TYPE,PROBLEM_STANDARD_LAPLACE_SUBTYPE,<span class="strong"><strong>ERR</strong></span>,ERROR,<span class="emphasis"><em>*999)</em></span>
!Finish the creation of a problem
<span class="strong"><strong>CALL</strong></span> <span class="strong"><strong>PROBLEM_CREATE_FINISH</strong></span>(PROBLEM,<span class="strong"><strong>ERR</strong></span>,ERROR,<span class="emphasis"><em>*999)</em></span>

!Start the creation of the control for a problem
<span class="strong"><strong>CALL</strong></span> <span class="strong"><strong>PROBLEM_CONTROL_CREATE_START</strong></span>(PROBLEM,<span class="strong"><strong>ERR</strong></span>,ERROR,<span class="emphasis"><em>*999)</em></span>
!Finish the creation of the control a problem
<span class="strong"><strong>CALL</strong></span> <span class="strong"><strong>PROBLEM_CONTROL_CREAT_CREATE_FINISH</strong></span>(PROBLEM,<span class="strong"><strong>ERR</strong></span>,ERROR,<span class="emphasis"><em>*999)</em></span>
 
  
 
 !Start the creation of the solutions for the problem
<span class="strong"><strong>CALL</strong></span> <span class="strong"><strong>PROBLEM_SOLUTIONS_CREATE_START</strong></span>(PROBLEM,<span class="strong"><strong>ERR</strong></span>,ERROR,<span class="emphasis"><em>*999)</em></span>
!Add in the equations set
<span class="strong"><strong>CALL</strong></span> <span class="strong"><strong>PROBLEM_SOLUTIONS_EQUATIONS_SET_ADD</strong></span>(PROBLEM,1,EQUATIONS_SET,<span class="strong"><strong>ERR</strong></span>,ERROR,<span class="emphasis"><em>*999)</em></span>
!Set the solutions output <span class="strong"><strong>type</strong></span>
<span class="strong"><strong>CALL</strong></span> <span class="strong"><strong>PROBLEM_SOLUTIONS_OUTPUT_TYPE_SET</strong></span>(PROBLEM,1,PROBLEM_SOLUTION_MATRIX_OUTPUT, &amp;
    &amp; <span class="strong"><strong>ERR</strong></span>,ERROR,<span class="emphasis"><em>*999)</em></span>
!Finish the creation of the solutions for the problem
<span class="strong"><strong>CALL</strong></span> <span class="strong"><strong>PROBLEM_SOLUTIONS_CREATE_FINISH</strong></span>(PROBLEM,<span class="strong"><strong>ERR</strong></span>,ERROR,<span class="emphasis"><em>*999)</em></span>

!Start the creation of the solvers for the problem
<span class="strong"><strong>CALL</strong></span> <span class="strong"><strong>PROBLEM_SOLVER_CREATE_START</strong></span>(PROBLEM,<span class="strong"><strong>ERR</strong></span>,ERROR,<span class="emphasis"><em>*999)</em></span>
!Set the <span class="strong"><strong>type</strong></span> of preconditioner
<span class="strong"><strong>CALL</strong></span> <span class="strong"><strong>PROBLEM_SOLVER_ITERATIVE_PRECONDITIONER_TYPE_SET</strong></span>(PROBLEM,1, &amp;
    &amp; PROBLEM_SOLVER_ITERATIVE_INCOMPLETE_LU_PRECONDITIONER,<span class="strong"><strong>ERR</strong></span>,ERROR,<span class="emphasis"><em>*999)</em></span>
!Set the <span class="strong"><strong>number</strong></span> of iterations
<span class="strong"><strong>CALL</strong></span> <span class="strong"><strong>PROBLEM_SOLVER_ITERATIVE_MAX_ITERATIONS_SET</strong></span>(PROBLEM,1,100,<span class="strong"><strong>ERR</strong></span>,ERROR,<span class="emphasis"><em>*999)</em></span>
!Set the output <span class="strong"><strong>type</strong></span>
<span class="strong"><strong>CALL</strong></span> <span class="strong"><strong>PROBLEM_SOlVER_OUTPUT_TYPE_SET</strong></span>(PROBLEM,1,PROBLEM_SOLVER_TIMING_OUTPUT, &amp;
    &amp; <span class="strong"><strong>ERR</strong></span>,ERROR,<span class="emphasis"><em>*999)</em></span>
!Finish the creation of the solvers for the problem
<span class="strong"><strong>CALL</strong></span> <span class="strong"><strong>PROBLEM_SOLVER_CREATE_FINISH</strong></span>(PROBLEM,<span class="strong"><strong>ERR</strong></span>,ERROR,<span class="emphasis"><em>*999)</em></span>

!Solve the problem
<span class="strong"><strong>CALL</strong></span> <span class="strong"><strong>PROBLEM_SOLVE</strong></span>(PROBLEM,<span class="strong"><strong>ERR</strong></span>,ERROR,<span class="emphasis"><em>*999)</em></span>

!Finalise CMISS.
<span class="strong"><strong>CALL</strong></span> <span class="strong"><strong>CMISS_FINALISE</strong></span>(<span class="strong"><strong>ERR</strong></span>,ERROR,<span class="emphasis"><em>*999)</em></span>
</pre></div></div><div class="navfooter"><hr /><table summary="Navigation footer" width="100%"><tr><td align="left" width="40%"><a accesskey="p" href="ch04.xhtml">Prev</a> </td><td align="center" width="20%"> </td><td align="right" width="40%"> <a accesskey="n" href="ch06.xhtml">Next</a></td></tr><tr><td valign="top" align="left" width="40%">Chapter 4. Object Interface </td><td align="center" width="20%"><a accesskey="h" href="index.xhtml">Home</a></td><td valign="top" align="right" width="40%"> Chapter 6. Library Commands</td></tr></table></div></body></html>