<chapter>
  <title>Obtaining the Code and Setting up the Development Environment</title>
  <section>
    <title>Obtaining the Code and Libraries</title>
    <para>
      To obtain the openCMISS source you need to check it out from the subversion repository. 
      There are two parts to openCMISS to obtain - openCMISS itself and the various libraries it needs.
    </para>
    <para>In your root openCMISS directory, make the <filename>opencmiss</filename> and <filename>opemcmissextra</filename> directories.</para>
    <section>
      <title>Obtain the Code</title>
      <para>The openCMISS repository is at https://opencmiss.svn.sourceforge.net/svnroot/opencmiss/cm</para>
      <para>To check out the main trunk of openCMISS issue the following command in the <filename>opencmiss</filename> directory:</para>
      <code>svn co https://opencmiss.svn.sourceforge.net/svnroot/opencmiss/cm/trunk cm</code>
      <para>If you are not familar with subversion, have a look at <ulink url='http://svnbook.red-bean.com'>here</ulink>.</para>
    </section>
    <section>
      <title>Obtain the Libraries</title>
      <para>The openCMISS libraries repository is at http://www.physiome.ox.ac.uk/svn/opencmissextras/cm</para>
      <para>To check out the main trunk of the various libraries required with openCMISS issue the following command in the <filename>opencmissextra</filename> directory:</para>
      <code>svn co http://www.physiome.ox.ac.uk/svn/opencmissextras/cm/trunk/external/architecture cm/external/architecture</code>
    </section>
    <para>
      where architecture is the appropriate architecture for the machine. Possible architectures are:
    </para>
    <itemizedlist>
      <listitem>i386-win32</listitem>
      <listitem>i386-win32-debug</listitem>
      <listitem>i686-linux</listitem>
      <listitem>i686-linux-debug</listitem>
      <listitem>x86_64-linux</listitem>
      <listitem>x86_64-linux-debug</listitem>
      <listitem>rs6000-32-aix</listitem>
      <listitem>rs6000-32-aix-debug</listitem>
    </itemizedlist>
    <para>
      Currently, the svn repository for openCMISS libraries is down. An alternative location for the libraries is at hpc. 
      Go to <filename>\\bioengsmb\cmiss\opencmissextras\cm</filename> and copy the necessary files. 
      The folder structure is the same as svn repository. 
    </para>
  </section>
  <section>
    <title>Project Set up</title>
    <section>
      <title>On AIX 5.3 (HPC)</title>
      <section>
        <title>Set environment</title>
        <para>Set environment variable to point to openCMISS</para>
        <code>setenv OPENCMISS_ROOT=&lt;path to your opencmiss folder&gt;</code>
        <para>Set environment variable to point to openCMISS-extras</para>
        <code>setenv OPENCMISSEXTRAS_ROOT=&lt;path to your opencmissextras folder&gt;</code>
      </section>
      <section>
        <title>Set MPI</title>
        <para>Create a file called <filename>hostfile.list</filename> in your home directory.</para>
        <para>Inside the file, add several lines of <quote>hpc.bioeng.auckland.ac.nz</quote></para>
        <para>In <filename>.rhost</filename> file in the home direcotry, add <quote>hpc &lt;username&gt;</quote></para>
      </section>
      <section>
        <title>Compile</title>
        <para>Change directory to opencmiss/cm</para>
        <para>Change directory to examples/&lt;example%gt;</para>
        <para>Use <code>gmake</code>.</para>
        <para>This should result in a binary that you can run in the <filename>bin/rs6000-32-aix</filename> folder.</para>
      </section>
    </section>
    <section>
      <title>On Ubuntu 8.04</title>
      <section>
        <title>Set environment</title>
        <para>Set environment variable to point to opencmiss</para>
        <code>setenv OPENCMISS_ROOT=&lt;path to your opencmiss folder&gt;</code>
        <para>Set environment variable to point to opencmiss-extras</para>
        <code>setenv OPENCMISSEXTRAS_ROOT=&lt;path to your opencmissextras folder&gt;</code>
        <para>It is also helpful to add the following</para>
        <code>
          <para>setenv PATH ${OPENCMISSEXTRAS_ROOT}/cm/external/${archname}/bin:${PATH}</para>
          <para>setenv PATH ${OPENCMISS_ROOT}/cm/bin/${archname}:${PATH}</para>
        </code>
        <para>where ${archname} is the appropriate architecture e.g., i686-linux, x86_64-linux.</para>
        <para>If you are using totalview you will also need to add</para>
         <code>setenv LM_LICENSE_FILES &lt;path-to-the-flex-directory&gt;</code>
      </section>
      <section>
        <title>Install Compilers</title>
        <para>Download Intel Fotran Compiler from <ulink url='http://www.intel.com/cd/software/products/asmo-na/eng/282048.htm'>here</ulink>.</para>
        <para>Extract the file and follow the <filename>install.htm</filename> to install</para>
      </section>
	    <section>
        <title>Install MPI</title>
        <para>Download MPICH2 from <ulink url='http://www.mcs.anl.gov/research/projects/mpich2/'>here.</ulink></para>
        <para>Extract the file and follow the <filename>README</filename> to install.</para>
        <para>Remember to set the path as suggested.</para>
      </section>
      <section>
        <title>Compile</title>
        <para>To build an example project:</para>
        <code>make</code>
        <para>To run the example project:</para>
        <code>mpd &amp; mpirun -n 2 path/to/the/execution/file</code>
        <para>To debug the project using TotalView:</para>
        <code>mpd &amp; mpirun -tv 2 path/to/the/execution/file</code>
      </section>
    </section>
    <section>
      <title>On Windows XP (Visual Studio 2005)</title>
      <section>
        <title>Install Compilers</title>
        <para>Download Intel Fortran Compiler from <ulink url="http://www.intel.com/cd/software/products/asmo-na/eng/278834.htm">here</ulink>.</para>
        <para>Execute the exe file and follow the installation wizard.</para>
      </section>
      <section>
        <title>Install MPI</title>
        <para>Download MPICH2 from <ulink url='http://www.mcs.anl.gov/research/projects/mpich2/'>here.</ulink></para>
        <para>You can either download the source archive and follow the <filename>README.windows</filename> file to install or download the installer to install.</para>
        <para>Set bin folder to the path</para>
        <para>To start the MPI, run <code>smpd -start</code> in command window.</para>
        <para>NOTE: as from MPICH2 version 1.0.7 the library names have changed. <filename>libmpich2</filename> has now become <filename>libmpi</filename>!</para>
      </section>
      <section>
        <title>Compile and Debug</title>
        <para>Build the Fortran project under the debug mode and generate the <filename>opencmisstest-debug.exe</filename> file.</para>
        <para>In the C Project (since the Fortran projects do not support MPI cluster debugger), configure the debugging properties according to <ulink url="http://download.microsoft.com/download/6/8/d/68d7d82b-e477-4699-b403-72be2e6218b1/CCS03DebugParallelAppsVS05.doc">this</ulink>.</para>
        <para>The MPIShim location is in the path similar to C:\Program Files\Microsoft Visual Studio 8\Common7\IDE\Remote Debugger\x86\mpishim.exe.</para>
        <para>Debug the C project.</para>
      </section>
      <section>
        <title>Run</title>
        <para>To run the project in the command window:</para>
        <command>mpiexec -n 2 -localroot &lt;path to the execution file&gt;</command>
      </section>
    </section>
    <section>
      <title>On Windows Vista (Visual Studio 2008)</title>
      <section>
        <title>Install Compilers</title>
        <para>Download Intel Fortran Compiler from <ulink url="http://www.intel.com/cd/software/products/asmo-na/eng/278834.htm">here</ulink>.</para>
        <para>Execute the exe file and follow the installation wizard.</para>
      </section>
      <section>
        <title>Install MPI</title>
        <para>Before you install MPICH2 under Vista you must turn off User Account Control</para>
        <orderedlist>
          <listitem>Goto Start -&gt; Control Panel</listitem>
          <listitem>Double-click on User Accounts</listitem>
          <listitem>Click "Turn User Account Control on or off"</listitem>
          <listitem>Untick "Use User Account Control (UAC) to help protect your computer" and click OK</listitem>
          <listitem>Restart your computer.</listitem>
        </orderedlist>
        <para>Download from <ulink url='http://www.mcs.anl.gov/research/projects/mpich2/'>here</ulink>. Choose the Win32 IA32 (binary) option.</para>
        <para>Run the downloaded .msi file. Follow all instructions and install "For everybody".</para>
        <para>Once you have installed MPICH2 you can turn User Account Control back on. Follow the instructions above and in 4. tick the "Use User Account Control ...".</para>
        <para>NOTE: as from MPICH2 version 1.0.7 the library names have changed. libmpich2 has now become libmpi!</para>
      </section>
      <section>
        <title>Compile</title>
        <para>For each example, go into the VisualopenCMISS_08 folder. Double click the VisualopenCMISS project solution file to lauch Visual Studio.</para>
      </section>
    </section>
  </section>
  <section>
    <title>Libraries Build (Optional)</title>
    <section>
      <title>Compiling PETSc</title>
      <para>Note this is assuming you have the Intel Fortran compiler version 10.1.024. Adjust the version string as necessary.</para>
      <section>
        <title>Step1: Linux Environment installation and Compiler Environment Set up</title>
        <para>Under windows system:</para>
        <itemizedlist>
          <listitem>Install Cygwin if you need to. Cywin can be found <ulink url="http://www.cygwin.com/">here</ulink>. Make sure you include the make and python modules when you install.</listitem>
          <listitem>Lauch a Command Prompt Window</listitem>
          <listitem>Run the ifortvars.bat batch file to setup your Intel Fortran environment. e.g., "C:\Program Files\Intel\Compiler\Fortran\10.1.024\IA32\Bin\ifortvars.bat"</listitem>
          <listitem>Run the Cygwin batch file to setup the unix environment e.g., "C:\Cygwin\Cygwin.bat"</listitem>
        </itemizedlist>
        <para>For Linux</para>
        <para>TODO</para>
      </section>
      <section>
        <title>Step2: Compile PETSC</title>
        <itemizedlist>
          <listitem>Change to the opencmissextras PETSc directory e.g., if opencmissextras root is E:\opencmissextras and we are compiling PETSC version petsc-2.3.3-p8 then "cd /cygwin/e/opencmissextras/cm/external/packages/PETSc/petsc-2.3.3-p8"</listitem>
          <listitem>If you have MPICH2 version 1.0.7 or greater edit the python/BuildSystem/config/packages/MPI.py file. Find the self.liblist_mpich line. After the line "['fmpich2.lib','mpich2.lib']," add the line "['fmpich2.lib','mpi.lib'],".</listitem>
          <listitem><code>PETSC_DIR=/cygdrive/e/opencmissextras/cm/external/packages/PETSc/petsc-2.3.3-p8; export PETSC_DIR</code></listitem>
          <listitem>
            <para>For a debug install issue the following commands</para>
            <code>
              <para>PETSC_ARCH=cygwin-c-debug; export PETSC_ARCH</para>
              <para>config/configure.py --prefix=/cygdrive/e/opencmissextras/cm/external/i386-win32-debug --with-shared=no --with-cc='win32fe cl' --with-fc='win32fe ifort' --with-cxx='win32fe cl' --download-f-blas-lapack=1 LIBS=-L'/cygdrive/c/Program\ Files/Intel/Compiler/Fortran/10.1.024/IA32/Lib' --with-debugging=yes</para>
            </code>
            <para>For a non-debug install issue the following commands</para>
            <code>
              <para>PETSC_ARCH=cygwin-c-opt; export PETSC_ARCH</para>
              <para>config/configure.py --prefix=/cygdrive/e/opencmissextras/cm/external/i386-win32 --with-shared=no --with-cc='win32fe cl' --with-fc='win32fe ifort' --with-cxx='win32fe cl' --download-f-blas-lapack=1 LIBS=-L'/cygdrive/c/Program\ Files/Intel/Compiler/Fortran/10.1.024/IA32/Lib' --with-debugging=no</para>
            </code>
          </listitem>
          <listitem><code>make -e all</code></listitem>
          <listitem><code>make -e install</code></listitem> 
        </itemizedlist>
      </section>
    </section>
  </section>
</chapter>
