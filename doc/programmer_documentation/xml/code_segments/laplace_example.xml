<programlisting>!Initialise CMISS.
<emphasis role="strong">CALL</emphasis> <emphasis role="strong">CMISS_INITIALISE</emphasis>(<emphasis role="strong">ERR</emphasis>,ERROR,<emphasis>*999)</emphasis>

!Start the creation a coordinate <emphasis role="strong">system </emphasis>(default 3D RC)
<emphasis role="strong">CALL</emphasis> <emphasis role="strong">COORDINATE_SYSTEM_CREATE_START</emphasis>(1,COORDINATE_SYSTEM,<emphasis role="strong">ERR</emphasis>,ERROR,<emphasis>*999)</emphasis>
!Set the coordinate system <emphasis role="strong">to</emphasis> be 2D
<emphasis role="strong">CALL</emphasis> <emphasis role="strong">COORDINATE_SYSTEM_DIMENSION_SET</emphasis>(COORDINATE_SYSTEM,2,<emphasis role="strong">ERR</emphasis>,ERROR,<emphasis>*999)</emphasis>
!Finish the creation a coordinate system
<emphasis role="strong">CALL</emphasis> <emphasis role="strong">COORDINATE_SYSTEM_CREATE_FINISH</emphasis>(COORDINATE_SYSTEM,<emphasis role="strong">ERR</emphasis>,ERROR,<emphasis>*999)</emphasis>

!Start the creation of a region with a coordinate system.
<emphasis role="strong">CALL</emphasis> <emphasis role="strong">REGION_CREATE_START</emphasis>(1,COORDINATE_SYSTEM,REGION,<emphasis role="strong">ERR</emphasis>,ERROR,<emphasis>*999)</emphasis>
!Finish the creation of a region
<emphasis role="strong">CALL</emphasis> <emphasis role="strong">REGION_CREATE_FINISH</emphasis>(REGION,<emphasis role="strong">ERR</emphasis>,ERROR,<emphasis>*999)</emphasis>

!Start the creation of a <emphasis role="strong">basis </emphasis>(default tri-linear Lagrange)
<emphasis role="strong">CALL</emphasis> <emphasis role="strong">BASIS_CREATE_START</emphasis>(1,BASIS,<emphasis role="strong">ERR</emphasis>,ERROR,<emphasis>*999)</emphasis>
!Set the <emphasis role="strong">number</emphasis> of Xi directions <emphasis role="strong">to</emphasis> 2 (bi-linear Lagrange)
<emphasis role="strong">CALL</emphasis> <emphasis role="strong">BASIS_NUMBER_XI_SET</emphasis>(BASIS,2,<emphasis role="strong">ERR</emphasis>,ERROR,<emphasis>*999)</emphasis>
!Finish the creation of a basis
<emphasis role="strong">CALL</emphasis> <emphasis role="strong">BASIS_CREATE_FINISH</emphasis>(BASIS,<emphasis role="strong">ERR</emphasis>,ERROR,<emphasis>*999)</emphasis>

  
  
!Start the creation of a generated mesh in the region
<emphasis role="strong">CALL</emphasis> <emphasis role="strong">GENERATED_MESH_CREATE_START</emphasis>(1,REGION,GENERATED_MESH,<emphasis role="strong">ERR</emphasis>,ERROR,<emphasis>*999)</emphasis>
!Set up a regular 100x100 mesh
<emphasis role="strong">CALL</emphasis> <emphasis role="strong">GENERATED_MESH_TYPE_SET</emphasis>(GENERATED_MESH,GENERATED_MESH_REGULAR_TYPE, &amp;
    &amp; <emphasis role="strong">ERR</emphasis>,ERROR,<emphasis>*999)</emphasis>
<emphasis role="strong">CALL</emphasis> <emphasis role="strong">GENERATED_MESH_BASIS_SET</emphasis>(GENERATED_MESH,BASIS,<emphasis role="strong">ERR</emphasis>,ERROR,<emphasis>*999)</emphasis>
<emphasis role="strong">CALL</emphasis> <emphasis role="strong">GENERATED_MESH_EXTENT_SET</emphasis>(GENERATED_MESH,(/2.0_DP,1.0_DP/),<emphasis role="strong">ERR</emphasis>,ERROR,<emphasis>*999)</emphasis>
<emphasis role="strong">CALL</emphasis> <emphasis role="strong">GENERATED_MESH_NUMBER_OF_ELEMENTS_SET</emphasis>(GENERATED_MESH,(/100,100/), &amp;
    &amp; <emphasis role="strong">ERR</emphasis>,ERROR,<emphasis>*999)</emphasis>
!Finish the creation of a generated mesh in the region
<emphasis role="strong">CALL</emphasis> <emphasis role="strong">GENERATED_MESH_CREATE_FINISH</emphasis>(GENERATED_MESH,MESH,<emphasis role="strong">ERR</emphasis>,ERROR,<emphasis>*999)</emphasis>

!Start the creation a decomposition on a mesh
<emphasis role="strong">CALL</emphasis> <emphasis role="strong">DECOMPOSITION_CREATE_START</emphasis>(1,MESH,DECOMPOSITION,<emphasis role="strong">ERR</emphasis>,ERROR,<emphasis>*999)</emphasis>
!Set the decomposition so that the domains are calculated
<emphasis role="strong">CALL</emphasis> <emphasis role="strong">DECOMPOSITION_TYPE_SET</emphasis>(DECOMPOSITION,DECOMPOSITION_CALCULATED_TYPE, &amp;
    &amp; <emphasis role="strong">ERR</emphasis>,ERROR,<emphasis>*999)</emphasis>
<emphasis role="strong">CALL</emphasis> <emphasis role="strong">DECOMPOSITION_NUMBER_OF_DOMAINS_SET</emphasis>(DECOMPOSITION,5,<emphasis role="strong">ERR</emphasis>,ERROR,<emphasis>*999)</emphasis>
!Finish the creation of decomposition
<emphasis role="strong">CALL</emphasis> <emphasis role="strong">DECOMPOSITION_CREATE_FINISH</emphasis>(DECOMPOSITION,<emphasis role="strong">ERR</emphasis>,ERROR,<emphasis>*999)</emphasis>

  

!Start the creation of a field on a <emphasis role="strong">region </emphasis>(default geometric)
<emphasis role="strong">CALL</emphasis> <emphasis role="strong">FIELD_CREATE_START</emphasis>(1,REGION,GEOMETRIC_FIELD,<emphasis role="strong">ERR</emphasis>,ERROR,<emphasis>*999)</emphasis>
!Set the decomposition the field will use
<emphasis role="strong">CALL</emphasis> <emphasis role="strong">FIELD_MESH_DECOMPOSITION_SET</emphasis>(GEOMETRIC_FIELD,DECOMPOSITION,<emphasis role="strong">ERR</emphasis>,ERROR,<emphasis>*999)</emphasis>
!Set mesh components each of the field variable components will use. NB. These
!are shown for example as each field variable component will default <emphasis role="strong">to</emphasis> the
!first mesh component.
<emphasis role="strong">CALL</emphasis> <emphasis role="strong">FIELD_COMPONENT_MESH_COMPONENT_SET</emphasis>(GEOMETRIC_FIELD, &amp;
    &amp; FIELD_STANDARD_VARIABLE_TYPE,1,1,<emphasis role="strong">ERR</emphasis>,ERROR,<emphasis>*999)</emphasis>
<emphasis role="strong">CALL</emphasis> <emphasis role="strong">FIELD_COMPONENT_MESH_COMPONENT_SET</emphasis>(GEOMETRIC_FIELD, &amp;
    &amp; FIELD_STANDARD_VARIABLE_TYPE,2,1,<emphasis role="strong">ERR</emphasis>,ERROR,<emphasis>*999)</emphasis>
!Finish the creation of a field
<emphasis role="strong">CALL</emphasis> <emphasis role="strong">FIELD_CREATE_FINISH</emphasis>(GEOMETRIC_FIELD,<emphasis role="strong">ERR</emphasis>,ERROR,<emphasis>*999)</emphasis>

!Set a field value in a <emphasis role="strong">parameter</emphasis> set
<emphasis role="strong">CALL</emphasis> <emphasis role="strong">FIELD_PARAMETER_SET_UPDATE_NODE</emphasis>(GEOMETRIC_FIELD, &amp;
    &amp; FIELD_VALUES_SET_TYPE,1,1,1,FIELD_STANDARD_VARIABLE_TYPE, &amp;
    &amp; 1.0_DP,<emphasis role="strong">ERR</emphasis>,ERROR,<emphasis>*999)</emphasis>
!Start the update of field values in a <emphasis role="strong">parameter</emphasis> set
<emphasis role="strong">CALL</emphasis> <emphasis role="strong">FIELD_PARAMETER_SET_UPDATE_START</emphasis>(GEOMETRIC_FIELD, &amp;
    &amp; FIELD_VALUES_SET_TYPE,<emphasis role="strong">ERR</emphasis>,ERROR,<emphasis>*999)</emphasis>
!!<emphasis role="strong">DO</emphasis> SOME CALCULATIONS
!Finish the update of field values in a <emphasis role="strong">parameter</emphasis> set
<emphasis role="strong">CALL</emphasis> <emphasis role="strong">FIELD_PARAMETER_SET_UPDATE_FINISH</emphasis>(GEOMETRIC_FIELD, &amp;
    &amp; FIELD_VALUES_SET_TYPE,<emphasis role="strong">ERR</emphasis>,ERROR,<emphasis>*999)</emphasis>
  
    
  
!Start the creation of an equations set on a region
<emphasis role="strong">CALL</emphasis> <emphasis role="strong">EQUATIONS_SET_CREATE_START</emphasis>(1,REGION,GEOMETRIC_FIELD,EQUATIONS_SET, &amp;
    &amp; <emphasis role="strong">ERR</emphasis>,ERROR,<emphasis>*999)</emphasis>
!Set the equations set <emphasis role="strong">to</emphasis> be standard Laplace�s equation problem
<emphasis role="strong">CALL</emphasis> <emphasis role="strong">EQUATIONS_SET_SPECIFICATION_SET</emphasis>(EQUATIONS_SET, &amp;
    &amp; EQUATIONS_SET_CLASSICAL_FIELD_CLASS,EQUATIONS_SET_LAPLACE_EQUATION_TYPE, &amp;
    &amp; EQUATIONS_SET_STANDARD_LAPLACE_SUBTYPE,<emphasis role="strong">ERR</emphasis>,ERROR,<emphasis>*999)</emphasis>
!Finish the creation of an equations set
<emphasis role="strong">CALL</emphasis> <emphasis role="strong">EQUATIONS_SET_CREATE_FINISH</emphasis>(EQUATIONS_SET,<emphasis role="strong">ERR</emphasis>,ERROR,<emphasis>*999)</emphasis>

!Start the creation of the equations set dependent field
<emphasis role="strong">CALL</emphasis> <emphasis role="strong">EQUATIONS_SET_DEPENDENT_CREATE_START</emphasis>(EQUATIONS_SET,<emphasis role="strong">ERR</emphasis>,ERROR,<emphasis>*999)</emphasis>
!Finish the create of the problems dependent field
<emphasis role="strong">CALL</emphasis> <emphasis role="strong">EQUATIONS_SET_DEPENDENT_CREATE_FINISH</emphasis>(EQUATIONS_SET,<emphasis role="strong">ERR</emphasis>,ERROR,<emphasis>*999)</emphasis>

!Start the creation of the equations set fixed conditions
<emphasis role="strong">CALL</emphasis> <emphasis role="strong">EQUATIONS_SET_FIXED_CONDITIONS_CREATE_START</emphasis>(EQUATIONS_SET,<emphasis role="strong">ERR</emphasis>,ERROR,<emphasis>*999)</emphasis>
!Set BC�s
<emphasis role="strong">CALL</emphasis> <emphasis role="strong">EQUATIONS_SET_FIXED_CONDITIONS_SET_DOF</emphasis>(EQUATIONS_SET,1, &amp;
    &amp; EQUATIONS_SET_FIXED_BOUNDARY_CONDITION,0.0_DP,<emphasis role="strong">ERR</emphasis>,ERROR,<emphasis>*999)</emphasis>
<emphasis role="strong">CALL</emphasis> <emphasis role="strong">EQUATIONS_SET_FIXED_CONDITIONS_SET_DOF</emphasis>(PROBLEM,10, &amp;
    &amp; EQUATIONS_SET_FIXED_BOUNDARY_CONDITION,1.0_DP,<emphasis role="strong">ERR</emphasis>,ERROR,<emphasis>*999)</emphasis>
!Finish the create of the equations set fixed conditions
<emphasis role="strong">CALL</emphasis> <emphasis role="strong">EQUATIONS_SET_FIXED_CONDITIONS_CREATE_FINISH</emphasis>(EQUATIONS_SET,<emphasis role="strong">ERR</emphasis>,ERROR,<emphasis>*999)</emphasis>
 
  
  
 !Start the creation of the equations for the equations set
<emphasis role="strong">CALL</emphasis> <emphasis role="strong">EQUATIONS_SET_EQUATIONS_CREATE_START</emphasis>(EQUATIONS_SET,<emphasis role="strong">ERR</emphasis>,ERROR,<emphasis>*999)</emphasis>
!Set the equations matrices sparsity <emphasis role="strong">type</emphasis>
<emphasis role="strong">CALL</emphasis> <emphasis role="strong">EQUATIONS_SET_SPARSITY_TYPE_SET</emphasis>(EQUATIONS_SET,EQUATIONS_SET_SPARSE_MATRICES, &amp; &amp; <emphasis role="strong">ERR</emphasis>,ERROR,<emphasis>*999)</emphasis>
!Set the equations output <emphasis role="strong">type</emphasis>
<emphasis role="strong">CALL</emphasis> <emphasis role="strong">EQUATIONS_SET_OUTPUT_TYPE_SET</emphasis>(EQUATIONS_SET,EQUATIONS_SET_TIMING_OUTPUT, &amp;
    &amp; <emphasis role="strong">ERR</emphasis>,ERROR,<emphasis>*999)</emphasis>
!Finish the creation of the equations for the equations set
<emphasis role="strong">CALL</emphasis> <emphasis role="strong">EQUATIONS_SET_EQUATIONS_CREATE_FINISH</emphasis>(EQUATIONS_SET,<emphasis role="strong">ERR</emphasis>,ERROR,<emphasis>*999)</emphasis>

!Start the creation of a problem
<emphasis role="strong">CALL</emphasis> <emphasis role="strong">PROBLEM_CREATE_START</emphasis>(1,PROBLEM,<emphasis role="strong">ERR</emphasis>,ERROR,<emphasis>*999)</emphasis>
!Set the problem set <emphasis role="strong">to</emphasis> be standard Laplace�s equation problem
<emphasis role="strong">CALL</emphasis> <emphasis role="strong">PROBLEM_SPECIFICATION_SET</emphasis>(PROBLEM,PROBLEM_CLASSICAL_FIELD_CLASS, &amp;
    &amp; PROBLEM_LAPLACE_EQUATION_TYPE,PROBLEM_STANDARD_LAPLACE_SUBTYPE,<emphasis role="strong">ERR</emphasis>,ERROR,<emphasis>*999)</emphasis>
!Finish the creation of a problem
<emphasis role="strong">CALL</emphasis> <emphasis role="strong">PROBLEM_CREATE_FINISH</emphasis>(PROBLEM,<emphasis role="strong">ERR</emphasis>,ERROR,<emphasis>*999)</emphasis>

!Start the creation of the control for a problem
<emphasis role="strong">CALL</emphasis> <emphasis role="strong">PROBLEM_CONTROL_CREATE_START</emphasis>(PROBLEM,<emphasis role="strong">ERR</emphasis>,ERROR,<emphasis>*999)</emphasis>
!Finish the creation of the control a problem
<emphasis role="strong">CALL</emphasis> <emphasis role="strong">PROBLEM_CONTROL_CREAT_CREATE_FINISH</emphasis>(PROBLEM,<emphasis role="strong">ERR</emphasis>,ERROR,<emphasis>*999)</emphasis>
 
  
 
 !Start the creation of the solutions for the problem
<emphasis role="strong">CALL</emphasis> <emphasis role="strong">PROBLEM_SOLUTIONS_CREATE_START</emphasis>(PROBLEM,<emphasis role="strong">ERR</emphasis>,ERROR,<emphasis>*999)</emphasis>
!Add in the equations set
<emphasis role="strong">CALL</emphasis> <emphasis role="strong">PROBLEM_SOLUTIONS_EQUATIONS_SET_ADD</emphasis>(PROBLEM,1,EQUATIONS_SET,<emphasis role="strong">ERR</emphasis>,ERROR,<emphasis>*999)</emphasis>
!Set the solutions output <emphasis role="strong">type</emphasis>
<emphasis role="strong">CALL</emphasis> <emphasis role="strong">PROBLEM_SOLUTIONS_OUTPUT_TYPE_SET</emphasis>(PROBLEM,1,PROBLEM_SOLUTION_MATRIX_OUTPUT, &amp;
    &amp; <emphasis role="strong">ERR</emphasis>,ERROR,<emphasis>*999)</emphasis>
!Finish the creation of the solutions for the problem
<emphasis role="strong">CALL</emphasis> <emphasis role="strong">PROBLEM_SOLUTIONS_CREATE_FINISH</emphasis>(PROBLEM,<emphasis role="strong">ERR</emphasis>,ERROR,<emphasis>*999)</emphasis>

!Start the creation of the solvers for the problem
<emphasis role="strong">CALL</emphasis> <emphasis role="strong">PROBLEM_SOLVER_CREATE_START</emphasis>(PROBLEM,<emphasis role="strong">ERR</emphasis>,ERROR,<emphasis>*999)</emphasis>
!Set the <emphasis role="strong">type</emphasis> of preconditioner
<emphasis role="strong">CALL</emphasis> <emphasis role="strong">PROBLEM_SOLVER_ITERATIVE_PRECONDITIONER_TYPE_SET</emphasis>(PROBLEM,1, &amp;
    &amp; PROBLEM_SOLVER_ITERATIVE_INCOMPLETE_LU_PRECONDITIONER,<emphasis role="strong">ERR</emphasis>,ERROR,<emphasis>*999)</emphasis>
!Set the <emphasis role="strong">number</emphasis> of iterations
<emphasis role="strong">CALL</emphasis> <emphasis role="strong">PROBLEM_SOLVER_ITERATIVE_MAX_ITERATIONS_SET</emphasis>(PROBLEM,1,100,<emphasis role="strong">ERR</emphasis>,ERROR,<emphasis>*999)</emphasis>
!Set the output <emphasis role="strong">type</emphasis>
<emphasis role="strong">CALL</emphasis> <emphasis role="strong">PROBLEM_SOlVER_OUTPUT_TYPE_SET</emphasis>(PROBLEM,1,PROBLEM_SOLVER_TIMING_OUTPUT, &amp;
    &amp; <emphasis role="strong">ERR</emphasis>,ERROR,<emphasis>*999)</emphasis>
!Finish the creation of the solvers for the problem
<emphasis role="strong">CALL</emphasis> <emphasis role="strong">PROBLEM_SOLVER_CREATE_FINISH</emphasis>(PROBLEM,<emphasis role="strong">ERR</emphasis>,ERROR,<emphasis>*999)</emphasis>

!Solve the problem
<emphasis role="strong">CALL</emphasis> <emphasis role="strong">PROBLEM_SOLVE</emphasis>(PROBLEM,<emphasis role="strong">ERR</emphasis>,ERROR,<emphasis>*999)</emphasis>

!Finalise CMISS.
<emphasis role="strong">CALL</emphasis> <emphasis role="strong">CMISS_FINALISE</emphasis>(<emphasis role="strong">ERR</emphasis>,ERROR,<emphasis>*999)</emphasis>
</programlisting>