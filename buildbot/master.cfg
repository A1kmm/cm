import os.path
from buildbot.scheduler import Scheduler, AnyBranchScheduler,Periodic
from buildbot.process import factory
from buildbot.steps import source, shell
from buildbot.status import html
from buildbot.status.mail import MailNotifier

c = BuildmasterConfig = {}

c['bots'] = [("x86_64-linux", "password")]

c['change_source'] = []

c['schedulers'] = [Periodic(name="every_day",builderNames=["x86_64-linux"],periodicBuildTimer=60*60*24)]

f = factory.BuildFactory()
f.addStep(source.SVN(mode='update',baseURL='https://opencmiss.svn.sourceforge.net/svnroot/opencmiss/cm/',defaultBranch='trunk',directory="cm"))

make_analytic_laplace = shell.ShellCommand(name="AnalyticLaplace Build",command=["make"],workdir="cm/examples/AnalyticLaplace")
f.addStep(make_analytic_laplace)

test_analytic_laplace = shell.ShellCommand(name="AnalyticLaplace Test",command=["make", "test"],workdir="cm/examples/AnalyticLaplace")
f.addStep(test_analytic_laplace)

make_diffusion = shell.ShellCommand(name="Diffusion Build",command=["make"],workdir="cm/examples/Diffusion")
f.addStep(make_diffusion)

make_finite_elasticity = shell.ShellCommand(name="FiniteElasticity Build",command=["make"],workdir="cm/examples/FiniteElasticity")
f.addStep(make_finite_elasticity)

make_helmholtz = shell.ShellCommand(name="Helmholtz Build",command=["make"],workdir="cm/examples/Helmholtz")
f.addStep(make_helmholtz)

make_laplace = shell.ShellCommand(name="Laplace Build",command=["make"],workdir="cm/examples/Laplace")
f.addStep(make_laplace)

make_monodomain = shell.ShellCommand(name="Monodomain Build",command=["make"],workdir="cm/examples/Monodomain")
f.addStep(make_monodomain)

make_nonlinear_poisson = shell.ShellCommand(name="NonlinearPoisson Build",command=["make"],workdir="cm/examples/NonlinearPoisson")
f.addStep(make_nonlinear_poisson)

make_cellml = shell.ShellCommand(name="cellml Build",command=["make"],workdir="cm/examples/cellml")
f.addStep(make_cellml)

make_define_geometry_and_export = shell.ShellCommand(name="define-geometry-and-export Build",command=["make"],workdir="cm/examples/define-geometry-and-export")
f.addStep(make_define_geometry_and_export)

#Hide for now
#make_simple_field_manipulation_direct_access = shell.ShellCommand(name="simple-field-manipulation-direct-access make Build",command=["make"],workdir="cm/examples/simple-field-manipulation-direct-access")
#f.addStep(make_simple_field_manipulation_direct_access)

c['builders'] = [
    {'name':'x86_64-linux',
    'slavename':'x86_64-linux',
    'builddir':'OpenCMISS',
    'factory':f
    }
]

c['slavePortnum'] = 9999

mn = MailNotifier(fromaddr="ting.yu@auckland.ac.nz",relayhost="mailhost.auckland.ac.nz",sendToInterestedUsers=False,extraRecipients=['ting.yu@auckland.ac.nz'], mode="failing")

c['status'] = []
c['status'].append(html.WebStatus(http_port=8888,allowForce=True))
c['status'].append(mn)

c['projectName'] = "OpenCMISS"
c['projectURL'] = "http://sourceforge.net/projects/opencmiss/"

c['buildbotURL'] = "http://localhost:8888/builders/"

