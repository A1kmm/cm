<?xml version="1.0" encoding="UTF-8"?><!DOCTYPE html PUBLIC "-//W3C//DTD XHTML 1.0 Transitional//EN" "http://www.w3.org/TR/xhtml1/DTD/xhtml1-transitional.dtd">
<html xmlns="http://www.w3.org/1999/xhtml"><head><title>Chapter 7. Coding Style</title><meta content="DocBook XSL Stylesheets V1.68.1" name="generator" /><link rel="start" href="index.xhtml" title="OpenCMISS Programmer Documentation" /><link rel="up" href="index.xhtml" title="OpenCMISS Programmer Documentation" /><link rel="prev" href="ch06.xhtml" title="Chapter 6. Library Commands" /></head><body><div class="navheader"><table summary="Navigation header" width="100%"><tr><th align="center" colspan="3">Chapter 7. Coding Style</th></tr><tr><td align="left" width="20%"><a accesskey="p" href="ch06.xhtml">Prev</a> </td><th align="center" width="60%"> </th><td align="right" width="20%"> </td></tr></table><hr /></div><div class="chapter" lang="en"><div class="titlepage"><div><div><h2 class="title"><a id="N11496" />Chapter 7. Coding Style</h2></div></div></div>
  This is an attempt to document the programming "style" for use with openCMISS.
  <div class="itemizedlist"><ul type="disc"><li>Within a module all named constants and procedure names should be prefixed by a name indicating that module so as to maintain a namespace.</li><li>All dynamic arrays should be <code class="code">ALLOCATABLE</code> rather than <code class="code">POINTER</code> unless full pointer functionality is required.</li><li>A double space should be used for an indent. Tabs should not be used to indent code.</li><li>All pointers should be checked to see if they are <code class="code">ASSOCIATED</code> before de-referencing them.</li><li>If there is just a single statement following an <code class="code">IF</code> clause use the inline form of the <code class="code">IF</code> statement and do not use <code class="code">THEN</code> and <code class="code">ENDIF</code>.</li><li>There should be a space before the first continuation character and a space after the second continuation character when continuing lines.</li><li>Use standard loop variable names e.g., <code class="code">nn</code>, <code class="code">component_idx</code>, when looping rather than temporary variable names.</li><li>When using case statements put in all known values of the the case variable and use a <code class="code">CALL FLAG_ERROR("Not implemented", ...</code> statement if the code for the case variable has yet to be coded.</li><li>Use a <code class="code">!================</code>... line between subroutines and functions</li><li>For dummy array arguments the dimension qualifier should be with the array name i.e., use <code class="code">INTEGER(INTG) :: FRED(N)</code> rather than <code class="code">INTEGER(INTG), DIMENSION(N) :: FRED</code>.</li></ul></div></div><div class="navfooter"><hr /><table summary="Navigation footer" width="100%"><tr><td align="left" width="40%"><a accesskey="p" href="ch06.xhtml">Prev</a> </td><td align="center" width="20%"> </td><td align="right" width="40%"> </td></tr><tr><td valign="top" align="left" width="40%">Chapter 6. Library Commands </td><td align="center" width="20%"><a accesskey="h" href="index.xhtml">Home</a></td><td valign="top" align="right" width="40%"> </td></tr></table></div></body></html>