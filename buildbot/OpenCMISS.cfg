import os.path
from buildbot.process import factory
from buildbot.steps import shell, trigger
from buildbot.steps.transfer import DirectoryUpload
from buildbot.scheduler import Nightly, Triggerable
from buildbot.process import factory
import sys
sys.path.append('python/lib')
import Logs,Source                

########################################
##                SVN
########################################   

f_x86_64_linux_svn=factory.BuildFactory()
f_x86_64_linux_svn.addStep(Source.SVNPropertyControlsMode(baseURL='https://svn.physiomeproject.org/svn/opencmissextras/cm/',defaultBranch='trunk/external/x86_64-linux-debug-intel',workdir='opencmissextras/cm/external/x86_64-linux-debug-intel'))

f_x86_64_linux_svn.addStep(Source.SVNPropertyControlsMode(baseURL='https://svn.physiomeproject.org/svn/opencmissextras/cm/',defaultBranch='trunk/external/x86_64-linux-debug-gnu',workdir='opencmissextras/cm/external/x86_64-linux-debug-gnu'))

f_x86_64_linux_svn.addStep(Source.SVNPropertyControlsMode(baseURL='https://opencmiss.svn.sourceforge.net/svnroot/opencmiss/cm/',defaultBranch='trunk',workdir="OpenCMISS/cm"))

########################################
##                intel
########################################

from buildbot.status.builder import SUCCESS, WARNINGS, FAILURE, SKIPPED, EXCEPTION

f_x86_64_linux_intel = factory.BuildFactory()
f_x86_64_linux_intel.addStep(Logs.ShellCommandWithHtmlLog(name="Examples Build",command=["python","examplesBuilder.py","intel"],workdir="."))
f_x86_64_linux_intel.addStep(Logs.ShellCommandWithHtmlLog(name="Examples Test",command=["python","examplesTester.py","intel"],workdir="."))

########################################
##                gnu
########################################

f_x86_64_linux_gnu = factory.BuildFactory()
f_x86_64_linux_gnu.addStep(Logs.ShellCommandWithHtmlLog(name="Examples Build",command=["python","examplesBuilder.py","gnu"],workdir="examples"))
#f_x86_64_linux_gnu.addStep(Logs.ShellCommandWithHtmlLog(name="Examples Test",command=["python","examplesTester.py","gnu"],workdir="examples"))


########################################
##          Logs & Doxygen
########################################

f_x86_64_doxygen = factory.BuildFactory()
f_x86_64_doxygen.addStep(DirectoryUpload(slavesrc="logs",masterdest="public_html/logs_x86_64-linux"))
f_x86_64_doxygen.addStep(shell.ShellCommand(name="Document Build",command=["python","autotest.py"],workdir="cm/doc/doxygen"))
f_x86_64_doxygen.addStep(shell.ShellCommand(name="Set right permission",command="find /home/autotest/x86_64-linux-intel/intel/OpenCMISS/ -type d -exec chmod 755 {} \\;", workdir="."))

f_nightly = factory.BuildFactory()
f_nightly.addStep(trigger.Trigger(schedulerNames=['every_day_intel'],waitForFinish=True))
f_nightly.addStep(trigger.Trigger(schedulerNames=['every_day_gnu'],waitForFinish=True))
f_nightly.addStep(trigger.Trigger(schedulerNames=['every_day_doxygen'],waitForFinish=True))


c['builders'].append(
    {'name':'x86_64-linux-svn',
    'slavename':'x86_64-linux-intel',
    'builddir':'intel',
    'factory':f_x86_64_linux_svn
    })

c['builders'].append(
    {'name':'x86_64-linux-intel-OpenCMISS',
    'slavename':'x86_64-linux-intel',
    'builddir':'intel/OpenCMISS/cm/examples',
    'factory':f_x86_64_linux_intel
    })

c['builders'].append(
    {'name':'x86_64-linux-gnu-OpenCMISS',
    'slavename':'x86_64-linux-intel',
    'builddir':'intel/OpenCMISS/cm',
    'factory':f_x86_64_linux_gnu
    })

c['builders'].append(
    {'name':'doxygen',
    'slavename':'x86_64-linux-intel',
    'builddir':'intel/OpenCMISS',
    'factory':f_x86_64_doxygen
    })

c['builders'].append(
    {'name':'nightly',
    'slavename':'x86_64-linux-intel',
    'builddir':'.',
    'factory':f_nightly
    })



## TODO buildbot's builddir should be unique across the whole build master, how to fix this problem?

c['schedulers'].append(Nightly(name="every_week_svn",
                          builderNames=['x86_64-linux-svn'],
                          properties={'SVNMode':'clobber'},
                          dayOfWeek=0,hour=14,minute=20))
c['schedulers'].append(Nightly(name="every_day_svn",
                           dayOfWeek=[1,2,3,4,5,6],builderNames=['x86_64-linux-svn'],
                           hour=14, minute=20))
c['schedulers'].append(Nightly(name="nightly",
                           builderNames=['nightly'],
                           hour=14, minute=30))
intel_schedule = Triggerable(name="every_day_intel",
                           builderNames=['x86_64-linux-intel-OpenCMISS'])
gnu_schedule = Triggerable(name="every_day_gnu",
                           builderNames=['x86_64-linux-gnu-OpenCMISS'])
doxygen_schedule = Triggerable(name="every_day_doxygen",
                           builderNames=['doxygen'])
c['schedulers'].append(gnu_schedule)
c['schedulers'].append(intel_schedule)
c['schedulers'].append(doxygen_schedule)

