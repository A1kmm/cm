<chapter>
  <title>Obtaining the Code and Setting up the development environment</title>
  <sect1>
    <title>Obtaining the Code</title>
    <para>
      To obtain the openCMISS source you need to check it out from the subversion repository. There are two parts to openCMISS to obtain - openCMISS itself and the various libraries it needs.
    </para>
    <literallayout>To check out the main trunk of openCMISS issue the following commands:<command>
      cd place-where-you-want-to-put-your-working-copy
      mkdir opencmiss
      cd opencmiss
      svn co https://opencmiss.svn.sourceforge.net/svnroot/opencmiss/cm/trunk cm</command></literallayout>
    <literallayout>To check out the main trunk of the various libraries required with openCMISS issue the following commands:<command>
      cd place-where-you-want-to-put-your-working-copy
      mkdir opencmissextras
      cd opencmissextras
      svn co http://www.physiome.ox.ac.uk/svn/opencmissextras/cm/trunk/external/architecture cm/external/architecture</command></literallayout>
    <para>
      where architecture is the appropriate architecture for the machine. Possible architectures are:
    </para>
    <itemizedlist>
      <listitem>i386-win32</listitem>
      <listitem>i386-win32-debug</listitem>
      <listitem>i686-linux</listitem>
      <listitem>i686-linux-debug</listitem>
      <listitem>x86_64-linux</listitem>
      <listitem>x86_64-linux-debug</listitem>
      <listitem>rs6000-32-aix</listitem>
      <listitem>rs6000-32-aix-debug</listitem>
    </itemizedlist>
  </sect1>
  <sect1>
    <title>Project Set up</title>
    <sect2>
      <title>On AIX 5.3</title>
      <sect3>
        <title>Set environment</title>
        Set environment variable to point to openCMISS
        Set environment variable to point to openCMISS-extras
      </sect3>
      <sect3>
        <title>Compile</title>
        Change directory to opencmiss/cm
        Use gmake.
        This should result in a binary that you can run, but you will need to set-up for MPI (hosts file etc).
        The main program is in opencmisstest.f90.
      </sect3>
    </sect2>
    <sect2>
      <title>On Ubuntu 8.04</title>
      <sect3>
        <title>Set environment</title>
        <para>Set environment variable to point to opencmiss</para>
        <command>setenv OPENCMISS_ROOT=&lt;path for your opencmiss folder&gt;</command>
        <para>Set environment variable to point to opencmiss-extras</para>
        <command>setenv OPENCMISSEXTRAS_ROOT=&lt;path for your opencmissextras folder&gt;</command>
        <para>Add opencmiss and opencmiss extra paths</para>
      </sect3>
      <sect3>
        <title>Install Compilers</title>
		<!-- TODO link Intel Fortran Compiler -->
        <para>Install Intel Fortran Compiler</para>
        <para>Extract the file and follow the install.htm to install</para>
      </sect3>
	  <sect3>
	    <title>Install MPI</title>
		<!-- TODO link MPICH2 -->
		<para>Install MPICH2</para>
        <para>Extract the file and follow the README to install</para>
		<para>Remember to set the path</para>
      </sect3>
	  <sect3>
        <title>Compile</title>
        <para>To build the project:</para>
		<command>make</command>
		<para>To run the project:</para>
		<command>mpd &amp; mpirun -n 2 path/to/the/execution/file</command>
		<para>To debug the project using TotalView:</para>
		<command>mpd &amp; mpirun -tv 2 path/to/the/execution/file</command>
      </sect3>
    </sect2>
    <sect2>
      <title>On Windows XP (Visual Studio 2005)</title>
      <sect3>
        <title>Set environment</title>
        <para>Modify the Fortran project properties for the link to OpenCMISS-extra</para>
      </sect3>
      <sect3>
        <title>Install Compilers</title>
        <!-- TODO link Intel Fortran Compiler -->
        <para>Install Intel Fortran Compiler</para>
        <para>Execute the exe file and follow the installation wizard, you night need to have direct access to internet to install</para>
      </sect3>
      <sect3>
        <title>Install MPI</title>
        <!-- TODO link MPICH2 -->
        <para>Install MPICH2</para>
        <para>You can either download the source archive and follow the README.windows file to install or download the installer to install.</para>
        <para>Set bin folder to the path</para>
        <para>To start the MPI, run smpd -start</para>
        <para>NOTE: as from MPICH2 version 1.0.7 the library names have changed. libmpich2 has now become libmpi!</para>
      </sect3>
      <sect3>
        <title>Compile and Debug</title>
        <para>Build the Fortran project under the debug mode and generate the opencmisstest-debug.exe file.</para>
        <!-- TODO insert the link -->
        <para>In the C Project (since the Fortran projects do not support MPI cluster debugger), configure the debugging properties according to this.</para>
        <para>The MPIShim location is in the path similar to C:\Program Files\Microsoft Visual Studio 8\Common7\IDE\Remote Debugger\x86\mpishim.exe.</para>
        <para>Debug the C project.</para>
      </sect3>
      <sect3>
        <title>Run</title>
        <para>To run the project in the command window:</para>
        <command>mpiexec -n 2 -localroot bin\i386-win32\opencmisstest-debug.exe</command>
      </sect3>
    </sect2>
    <sect2>
      <title>On Windows Vista (Visual Studio 2008)</title>
      <sect3>
        <title>Install Compilers</title>
        <!-- TODO link Intel Fortran Compiler -->
        <para>Install Intel Fortran Compiler</para>
        <para>Execute the exe file and follow the installation wizard, you night need to have direct access to internet to install</para>
      </sect3>
      <sect3>
        <title>Install MPI</title>
        <!-- TODO link MPICH2 -->
        <para>Before you install MPICH2 under Vista you must turn off User Account Control</para>
        <orderedlist>
          <listitem>Goto Start -&gt; Control Panel</listitem>
          <listitem>Double-click on User Accounts</listitem>
          <listitem>Click "Turn User Account Control on or off"</listitem>
          <listitem>Untick "Use User Account Control (UAC) to help protect your computer" and click OK</listitem>
          <listitem>Restart your computer.</listitem>
        </orderedlist>
        <para>Download from here. Choose the Win32 IA32 (binary) option.</para>
        <para>Run the downloaded .msi file. Follow all instructions and install "For everybody".</para>
        <para>Once you have installed MPICH2 you can turn User Account Control back on. Follow the instructions above and in 4. tick the "Use User Account Control ...".</para>
        <para>NOTE: as from MPICH2 version 1.0.7 the library names have changed. libmpich2 has now become libmpi!</para>
      </sect3>
      <sect3>
        <title>Optional: Compiling PETSc</title>
        <para>Note this is assuming you have the Intel Fortran compiler version 10.1.024. Adjust the version string as necessary.</para>
        <itemizedlist>
          <listitem>Install Cygwin if you need to. Cywin can be found here. Make sure you include the make and python modules when you install.</listitem>
          <listitem>Lauch a Command Prompt Window</listitem>
          <listitem>Run the ifortvars.bat batch file to setup your Intel Fortran environment. e.g., "C:\Program Files\Intel\Compiler\Fortran\10.1.024\IA32\Bin\ifortvars.bat"</listitem>
          <listitem>Run the Cygwin batch file to setup the unix environment e.g., "C:\Cygwin\Cygwin.bat"</listitem>
          <listitem>Change to the opencmissextras PETSc directory e.g., if opencmissextras root is E:\opencmissextras and we are compiling PETSC version petsc-2.3.3-p8 then "cd /cygwin/e/opencmissextras/cm/external/packages/PETSc/petsc-2.3.3-p8"</listitem>
          <listitem>If you have MPICH2 version 1.0.7 or greater edit the python/BuildSystem/config/packages/MPI.py file. Find the self.liblist_mpich line. After the line "['fmpich2.lib','mpich2.lib']," add the line "['fmpich2.lib','mpi.lib'],".</listitem>
          <listitem>Compile and Install PETSC:</listitem>
        </itemizedlist>
        <para>For a debug install issue the following commands</para>
        <command>
          <para>PETSC_DIR=/cygdrive/e/opencmissextras/cm/external/packages/PETSc/petsc-2.3.3-p8; export PETSC_DIR</para>
          <para>PETSC_ARCH=cygwin-c-debug; export PETSC_ARCH</para>
          <para>config/configure.py --prefix=/cygdrive/e/opencmissextras/cm/external/i386-win32-debug --with-shared=no --with-cc='win32fe cl' --with-fc='win32fe ifort' --with-cxx='win32fe cl' --download-f-blas-lapack=1 LIBS=-L'/cygdrive/c/Program\ Files/Intel/Compiler/Fortran/10.1.024/IA32/Lib' --with-debugging=yes</para>
          <para>PETSC_ARCH=cygwin-c-debug; export PETSC_ARCH</para>
          <para>make -e all</para>
          <para>make -e install</para>
        </command>
        <para>For a non-debug install issue the following commands</para>
        <command>
          <para>PETSC_DIR=/cygdrive/e/opencmissextras/cm/external/packages/PETSc/petsc-2.3.3-p8; export PETSC_DIR</para>
          <para>PETSC_ARCH=cygwin-c-opt; export PETSC_ARCH</para>
          <para>config/configure.py --prefix=/cygdrive/e/opencmissextras/cm/external/i386-win32 --with-shared=no --with-cc='win32fe cl' --with-fc='win32fe ifort' --with-cxx='win32fe cl' --download-f-blas-lapack=1 LIBS=-L'/cygdrive/c/Program\ Files/Intel/Compiler/Fortran/10.1.024/IA32/Lib' --with-debugging=no</para>
          <para>PETSC_ARCH=cygwin-c-opt; export PETSC_ARCH</para>
          <para>make -e all</para>
          <para>make -e install</para>
        </command>
      </sect3>
      <sect3>
        <title>Compile</title>
        <para>Go to the openCMISS/cm directory that you have downloaded openCMISS from SVN into. Go into the VisualopenCMISS_08 folder. Double click the VisualopenCMISS project solution file to lauch Visual Studio.</para>
      </sect3>
    </sect2>
  </sect1>
</chapter>
